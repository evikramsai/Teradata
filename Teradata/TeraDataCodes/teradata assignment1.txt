TERADATA SELF

SELECT * FROM AGGREGATION_TABLE;

 


SELECT AVG(Salary),Count(Salary),Count(*) FROM AGGREGATION_TABLE;

 
SELECT * FROM EMPLOYEE_TABLE;

 
SELECT MIN(Salary),MAX(Salary),SUM(Salary),AVG(Salary),COUNT(*) FROM EMPLOYEE_TABLE;

 
SELECT Dept_No,MIN(Salary),MAX(Salary),SUM(Salary),AVG(Salary),COUNT(*) FROM EMPLOYEE_TABLE  GROUP BY Dept_No;

 

SELECT Dept_No,MIN(Salary),MAX(Salary),SUM(Salary),AVG(Salary),COUNT(*) FROM EMPLOYEE_TABLE  GROUP BY Dept_No Order by 1;

 

SELECT Dept_No,MIN(Salary),MAX(Salary),SUM(Salary),AVG(Salary),COUNT(*) FROM EMPLOYEE_TABLE WHERE DEPT_NO IN(30,40) GROUP BY DEPT_NO ORDER BY 1;

 



SELECT Dept_No,MIN(Salary),MAX(Salary),SUM(Salary),AVG(Salary),COUNT(*) FROM EMPLOYEE_TABLE WHERE DEPT_NO IN(30,10) GROUP BY DEPT_NO HAVING Count(*)>1;

 

SELECT 'PRODUCT_ID' AS "COLUMN NAME",COUNT(*) / COUNT(DISTINCT(PRODUCT_ID)) AS "AVERAGE ROWS" FROM SALES_TABLE;

 

SELECT 'SALE_DATE' AS "COLUMN NAME",COUNT(*) / COUNT(DISTINCT(SALE_DATE)) AS "AVERAGE ROWS" FROM SALES_TABLE;

 

SELECT 'PRODUCT_ID' AS "COLUMN NAME",COUNT(*) / COUNT(DISTINCT(PRODUCT_ID)) AS "AVERAGE ROWS",'SALE_DATE' AS "COLUMN NAME2",COUNT(*) / COUNT(DISTINCT(SALE_DATE)) AS "AVERAGE ROWS2" FROM SALES_TABLE;

 

SELECT PRODUCT_ID,EXTRACT(MONTH FROM SALE_DATE) AS MTH,EXTRACT(YEAR FROM SALE_DATE) AS YR,SUM(DAILY_SALES) AS SUM_DAILY_SALES FROM SALES_TABLE GROUP BY GROUPING SETS (PRODUCT_ID,MTH,YR) ORDER BY PRODUCT_ID DESC,MTH DESC,YR DESC;


 

SELECT PRODUCT_ID,EXTRACT(MONTH FROM SALE_DATE) AS MTH,EXTRACT(YEAR FROM SALE_DATE) AS YR,SUM(DAILY_SALES) AS SUM_DAILY_SALES FROM SALES_TABLE GROUP BY ROLLUP(PRODUCT_ID,MTH,YR) ORDER BY PRODUCT_ID DESC,MTH DESC,YR DESC;

 

SELECT PRODUCT_ID,EXTRACT(MONTH FROM SALE_DATE) AS MTH,EXTRACT(YEAR FROM SALE_DATE) AS YR,SUM(DAILY_SALES) AS SUM_DAILY_SALES FROM SALES_TABLE GROUP BY CUBE(PRODUCT_ID,MTH,YR) ORDER BY PRODUCT_ID DESC,MTH DESC,YR DESC;

 

TEST QUESTION

SELECT DEPT_NO,AVG(Salary),SUM(Salary) FROM EMPLOYEE_TABLE GROUP BY DEPT_NO  WHERE DEPT_NO IN(30,40,50) HAVING AVG(Salary)>=15000;

 



BASIC SQL FUNCTIONS
SELECT * FROM STUDENT_TABLE;
 
SELECT FIRST_NAME,LAST_NAME,CLASS_CODE,GRADE_PT FROM STUDENT_TABLE;

 

SELECT * FROM STUDENT_TABLE ORDER BY LAST_NAME;

 
SELECT * FROM STUDENT_TABLE ORDER BY 3;

 
SELECT * FROM STUDENT_TABLE ORDER BY 5;
 
SELECT * FROM STUDENT_TABLE ORDER BY LAST_NAME DESC;

 
SELECT * FROM STUDENT_TABLE ORDER BY 5 DESC;

 
SELECT * FROM STUDENT_TABLE ORDER BY CLASS_CODE DESC,GRADE_PT ASC;

 
SELECT * FROM STUDENT_TABLE ORDER BY CASE CLASS_CODE WHEN 'sr' THEN 1 WHEN 'FR' THEN 2 ELSE 3 END;

 
SELECT FIRST_NAME "FNAME",LAST_NAME "LNAME" FROM STUDENT_TABLE;

 
SELECT * FROM STUDENT_TABLE ORDER BY GRADE_PT;

 
SELECT FIRST_NAME,LAST_NAME,CLASS_CODE AS "SUM",GRADE_PT FROM STUDENT_TABLE WHERE GRADE_PT>3.00;

 

SELECT FIRST_NAME,LAST_NAME,CLASS_CODE,GRADE_PT FROM STUDENT_TABLE WHERE GRADE_PT>3.00;

 

COLLECT STATISTICS

HELP STATISTICS EMPLOYEE_TABLE;

 

SELECT * FROM Sales_Table WHERE PRODUCT_ID=1000;

 

SELECT * FROM SALES_TABLE WHERE PRODUCT_ID=1000 AND DAILY_SALES=5000000;

 

SELECT * FROM ORDER_TABLE;

 

EXPLAIN SELECT*FROM NEW_EMPLOYEE_TABLE;

 

HELP STATISTICS HIERARCHY_TABLE;

OUTPUT WILL NOT COME FOR THIS STATISTICS BECAUSE THE TABLE DOES NOT EXIST